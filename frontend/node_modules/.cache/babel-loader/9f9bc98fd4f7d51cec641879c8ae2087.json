{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\dev\\\\REACT\\\\leitura\\\\leitura\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\dev\\\\REACT\\\\leitura\\\\leitura\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar api = \"http://localhost:3001\";\nvar headers = {\n  'Accept': 'application/json',\n  'Authorization': 'whatever-you-want'\n};\nexport var getAllPosts = function getAllPosts() {\n  return fetch(\"\".concat(api, \"/posts\"), {\n    headers: headers\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    //console.log('todos os posts')\n    //console.log(data)\n    return data;\n  }).catch(function (error) {\n    console.log(error);\n    return error;\n  });\n};\nexport var getAllCategories = function getAllCategories() {\n  return fetch(\"\".concat(api, \"/categories\"), {\n    method: 'get',\n    headers: headers\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    //console.log('todas categorias')\n    //console.log(data)\n    return data;\n  }).catch(function (error) {\n    console.log(error);\n    return error;\n  });\n};\nexport var getPostsForCategories = function getPostsForCategories(name) {\n  return fetch(\"\".concat(api, \"/\").concat(name, \"/posts\"), {\n    method: 'get',\n    headers: headers\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    //console.log('posts com categorias',name)\n    //console.log(data)\n    return data;\n  }).catch(function (error) {\n    console.log(error);\n    return error;\n  });\n};\nexport var getPostDetails = function getPostDetails(postId) {\n  return fetch(\"\".concat(api, \"/posts/\").concat(postId), {\n    method: 'get',\n    headers: headers\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    console.log(\"post com detalhes\", postId);\n    console.log(data);\n    return data;\n  }).catch(function (error) {\n    console.log(error);\n    return error;\n  });\n};\nexport var getPostComments = function getPostComments(postId) {\n  return fetch(\"\".concat(api, \"/posts/\").concat(postId, \"/comments\"), {\n    method: 'get',\n    headers: headers\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    console.log(\"post com commentários\", postId);\n    console.log(data);\n    return data;\n  }).catch(function (error) {\n    console.log(error);\n    return error;\n  });\n};\nexport var createPost =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(post) {\n    var response, content;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(post);\n            response = fetch(\"\".concat(api, \"/posts\"), {\n              method: 'POST',\n              headers: headers,\n              body: JSON.stringify({\n                id: post.id,\n                timestamp: post.timestamp,\n                title: post.title,\n                body: post.body,\n                author: post.author,\n                category: post.category\n              })\n            });\n            _context.next = 4;\n            return response.json();\n\n          case 4:\n            content = _context.sent;\n            console.log(content);\n            return _context.abrupt(\"return\", content);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function createPost(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // .then(res => res.json())\n// .then(data => {\n//     console.log(\"novo post\", post)\n//     console.log(data)\n//     return data\n// })\n// .catch(error => {\n//     console.log(error)\n//     return error\n// })\n\nexport default api;","map":{"version":3,"sources":["C:\\dev\\REACT\\leitura\\leitura\\frontend\\src\\LeituraAPI.js"],"names":["api","headers","getAllPosts","fetch","then","res","json","data","catch","error","console","log","getAllCategories","method","getPostsForCategories","name","getPostDetails","postId","getPostComments","createPost","post","response","body","JSON","stringify","id","timestamp","title","author","category","content"],"mappings":"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","sourcesContent":["const api = \"http://localhost:3001\";\r\n\r\nconst headers = {\r\n    'Accept': 'application/json',\r\n    'Authorization': 'whatever-you-want'\r\n}\r\n\r\nexport const getAllPosts = () =>\r\n    fetch(`${api}/posts`, { headers })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            //console.log('todos os posts')\r\n            //console.log(data)\r\n            return data\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            return error\r\n        })\r\n\r\nexport const getAllCategories = () =>\r\n    fetch(`${api}/categories`, {\r\n        method: 'get',\r\n        headers\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            //console.log('todas categorias')\r\n            //console.log(data)\r\n            return data\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            return error\r\n        })\r\n\r\n\r\nexport const getPostsForCategories = (name) =>\r\n    fetch(`${api}/${name}/posts`, {\r\n        method: 'get',\r\n        headers\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            //console.log('posts com categorias',name)\r\n            //console.log(data)\r\n            return data\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            return error\r\n        })\r\n\r\nexport const getPostDetails = (postId) =>\r\n    fetch(`${api}/posts/${postId}`, {\r\n        method: 'get',\r\n        headers\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log(\"post com detalhes\", postId)\r\n            console.log(data)\r\n            return data\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            return error\r\n        })\r\n\r\nexport const getPostComments = (postId) =>\r\n    fetch(`${api}/posts/${postId}/comments`, {\r\n        method: 'get',\r\n        headers\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log(\"post com commentários\", postId)\r\n            console.log(data)\r\n            return data\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            return error\r\n        })\r\n\r\n\r\n\r\nexport const createPost = async(post) =>{\r\n    console.log(post)\r\n    const response = fetch(`${api}/posts`, {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify({\r\n            id: post.id,\r\n            timestamp: post.timestamp,\r\n            title: post.title,\r\n            body: post.body,\r\n            author: post.author,\r\n            category: post.category,\r\n        })\r\n    })\r\n\r\n    const content = await response.json();\r\n    console.log(content)\r\n    return content\r\n}\r\n        // .then(res => res.json())\r\n        // .then(data => {\r\n        //     console.log(\"novo post\", post)\r\n        //     console.log(data)\r\n        //     return data\r\n        // })\r\n        // .catch(error => {\r\n        //     console.log(error)\r\n        //     return error\r\n        // })\r\n\r\n\r\n\r\nexport default api;"]},"metadata":{},"sourceType":"module"}