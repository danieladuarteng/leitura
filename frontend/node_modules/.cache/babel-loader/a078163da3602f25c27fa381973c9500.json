{"ast":null,"code":"import { getAllPosts, getPostDetails, getPostComments, createPost } from '../LeituraAPI';\nimport { receivePosts, receivePostDetails, receivePostComments, newPost } from './posts';\nvar genereteId = localStorage.token;\nif (!genereteId) genereteId = localStorage.token = Math.random().toString(36).substr(-8);\nexport function handleInitialData() {\n  return function (dispatch) {\n    return getAllPosts().then(function (posts) {\n      dispatch(receivePosts(posts));\n    });\n  };\n}\nexport function postDetails(id) {\n  return function (dispatch) {\n    return getPostDetails(id).then(function (post) {\n      dispatch(receivePostDetails(post));\n    });\n  };\n}\nexport function postComments(id) {\n  return function (dispatch) {\n    return getPostComments(id).then(function (comments) {\n      dispatch(receivePostComments(comments));\n    });\n  };\n}\nexport function addPost(newPostContent) {\n  var post = {\n    id: genereteId,\n    //timestamp: newPostContent.timestamp,\n    title: newPostContent.title,\n    body: newPostContent.body,\n    author: newPostContent.author.body,\n    category: newPostContent.category\n  };\n  return function (dispatch) {\n    return createPost(post).then(function (resp) {\n      return dispatch(newPost(resp));\n    });\n  };\n}","map":{"version":3,"sources":["C:\\dev\\REACT\\leitura\\leitura\\frontend\\src\\actions\\shared.js"],"names":["getAllPosts","getPostDetails","getPostComments","createPost","receivePosts","receivePostDetails","receivePostComments","newPost","genereteId","localStorage","token","Math","random","toString","substr","handleInitialData","dispatch","then","posts","postDetails","id","post","postComments","comments","addPost","newPostContent","title","body","author","category","resp"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,EAAsCC,eAAtC,EAAuDC,UAAvD,QAAyE,eAAzE;AACA,SAASC,YAAT,EAAuBC,kBAAvB,EAA2CC,mBAA3C,EAAgEC,OAAhE,QAA+E,SAA/E;AAEA,IAAIC,UAAU,GAAGC,YAAY,CAACC,KAA9B;AACA,IAAI,CAACF,UAAL,EACIA,UAAU,GAAGC,YAAY,CAACC,KAAb,GAAqBC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAC,CAAnC,CAAlC;AAEJ,OAAO,SAASC,iBAAT,GAA6B;AAChC,SAAO,UAACC,QAAD,EAAc;AACjB,WAAOhB,WAAW,GACbiB,IADE,CACG,UAACC,KAAD,EAAW;AACbF,MAAAA,QAAQ,CAACZ,YAAY,CAACc,KAAD,CAAb,CAAR;AACH,KAHE,CAAP;AAIH,GALD;AAMH;AAGD,OAAO,SAASC,WAAT,CAAqBC,EAArB,EAAyB;AAC5B,SAAO,UAACJ,QAAD,EAAc;AACjB,WAAOf,cAAc,CAACmB,EAAD,CAAd,CACFH,IADE,CACG,UAAAI,IAAI,EAAI;AACVL,MAAAA,QAAQ,CAACX,kBAAkB,CAACgB,IAAD,CAAnB,CAAR;AACH,KAHE,CAAP;AAIH,GALD;AAMH;AAED,OAAO,SAASC,YAAT,CAAsBF,EAAtB,EAA0B;AAC7B,SAAO,UAACJ,QAAD,EAAc;AACjB,WAAOd,eAAe,CAACkB,EAAD,CAAf,CACFH,IADE,CACG,UAAAM,QAAQ,EAAI;AACdP,MAAAA,QAAQ,CAACV,mBAAmB,CAACiB,QAAD,CAApB,CAAR;AACH,KAHE,CAAP;AAIH,GALD;AAMH;AAED,OAAO,SAASC,OAAT,CAAiBC,cAAjB,EAAiC;AACpC,MAAMJ,IAAI,GAAG;AACTD,IAAAA,EAAE,EAAEZ,UADK;AAET;AACAkB,IAAAA,KAAK,EAAED,cAAc,CAACC,KAHb;AAITC,IAAAA,IAAI,EAAEF,cAAc,CAACE,IAJZ;AAKTC,IAAAA,MAAM,EAAEH,cAAc,CAACG,MAAf,CAAsBD,IALrB;AAMTE,IAAAA,QAAQ,EAAEJ,cAAc,CAACI;AANhB,GAAb;AAQA,SAAO,UAACb,QAAD,EAAc;AACjB,WAAOb,UAAU,CAACkB,IAAD,CAAV,CACFJ,IADE,CACG,UAAAa,IAAI;AAAA,aAAId,QAAQ,CAACT,OAAO,CAACuB,IAAD,CAAR,CAAZ;AAAA,KADP,CAAP;AAEH,GAHD;AAKH","sourcesContent":["import { getAllPosts, getPostDetails, getPostComments, createPost } from '../LeituraAPI'\r\nimport { receivePosts, receivePostDetails, receivePostComments, newPost } from './posts'\r\n\r\nlet genereteId = localStorage.token\r\nif (!genereteId)\r\n    genereteId = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nexport function handleInitialData() {\r\n    return (dispatch) => {\r\n        return getAllPosts()\r\n            .then((posts) => {\r\n                dispatch(receivePosts(posts))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function postDetails(id) {\r\n    return (dispatch) => {\r\n        return getPostDetails(id)\r\n            .then(post => {\r\n                dispatch(receivePostDetails(post))\r\n            })\r\n    }\r\n}\r\n\r\nexport function postComments(id) {\r\n    return (dispatch) => {\r\n        return getPostComments(id)\r\n            .then(comments => {\r\n                dispatch(receivePostComments(comments))\r\n            })\r\n    }\r\n}\r\n\r\nexport function addPost(newPostContent) {\r\n    const post = {\r\n        id: genereteId,\r\n        //timestamp: newPostContent.timestamp,\r\n        title: newPostContent.title,\r\n        body: newPostContent.body,\r\n        author: newPostContent.author.body,\r\n        category: newPostContent.category,\r\n    }\r\n    return (dispatch) => {\r\n        return createPost(post)\r\n            .then(resp => dispatch(newPost(resp)))\r\n    }\r\n\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}