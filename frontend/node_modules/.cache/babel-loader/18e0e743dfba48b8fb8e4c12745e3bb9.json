{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\dev\\\\REACT\\\\leitura\\\\leitura\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\dev\\\\REACT\\\\leitura\\\\leitura\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\dev\\\\REACT\\\\leitura\\\\leitura\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\dev\\\\REACT\\\\leitura\\\\leitura\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\dev\\\\REACT\\\\leitura\\\\leitura\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\dev\\\\REACT\\\\leitura\\\\leitura\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\dev\\\\REACT\\\\leitura\\\\leitura\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\dev\\\\REACT\\\\leitura\\\\leitura\\\\frontend\\\\src\\\\Home.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as LeituraAPI from './LeituraAPI';\nimport Button from '@material-ui/core/Button';\nimport Post from './Post';\nimport _ from 'underscore';\nimport moment from 'moment';\nimport './App.css';\nvar categoriesList = [{\n  id: 0,\n  title: 'All Categories',\n  category: 'all'\n}, {\n  id: 1,\n  title: 'React',\n  category: 'react'\n}, {\n  id: 2,\n  title: 'Redux',\n  category: 'redux'\n}, {\n  id: 3,\n  title: 'Udacity',\n  category: 'udacity'\n}];\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      categorySelected: 'all',\n      sort: '!voteScore'\n    };\n\n    _this.onClick =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(categorySelected) {\n        var ab;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(categorySelected !== 'all')) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _context.next = 3;\n                return LeituraAPI.getPostsForCategories(categorySelected);\n\n              case 3:\n                ab = _context.sent;\n\n              case 4:\n                _this.setState({\n                  categorySelected: categorySelected\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onSortBy = function (e) {\n      _this.setState({\n        sort: e.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var posts = this.props.posts;\n      var _this$state = this.state,\n          categorySelected = _this$state.categorySelected,\n          sort = _this$state.sort;\n\n      var postsRender = _.sortBy(posts, sort);\n\n      console.log('sort', sort);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Leitura\"))), React.createElement(\"div\", {\n        className: \"grid-posts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid-posts-item1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, categorySelected === 'all' ? postsRender.map(function (post) {\n        return React.createElement(Post, {\n          key: post.id,\n          id: post.id,\n          title: post.title,\n          category: post.category,\n          author: post.author,\n          timestamp: moment(post.timestamp).format('DD/MM/YYYY'),\n          commentCount: post.commentCount,\n          body: post.body,\n          voteScore: post.voteScore,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        });\n      }) : postsRender.filter(function (a) {\n        return a.category === categorySelected;\n      }).map(function (post) {\n        return React.createElement(Post, {\n          key: post.id,\n          id: post.id,\n          title: post.title,\n          category: post.category,\n          author: post.author,\n          timestamp: moment(post.timestamp).format('DD/MM/YYYY'),\n          commentCount: post.commentCount,\n          body: post.body,\n          voteScore: post.voteScore,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        className: \"grid-posts-item2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"meconheca\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/update\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"botaoEnviar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"NEW POST\"))), React.createElement(\"div\", {\n        className: \"categories\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"SORT BY \"), React.createElement(\"select\", {\n        onChange: function onChange(e) {\n          return _this2.onSortBy(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"!voteScore\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"More votes\"), React.createElement(\"option\", {\n        value: \"voteScore\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Less votes\"), React.createElement(\"option\", {\n        value: \"timestamp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"option\", {\n        value: \"!commentCount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Comments\"))), React.createElement(\"div\", {\n        className: \"atualizacoes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"CATEGORIES\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, categoriesList.map(function (item) {\n        return React.createElement(\"li\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            _this2.onClick(item.category);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, item.title));\n      }))))));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nHome.propTypes = {\n  posts: PropTypes.array.isRequired,\n  categories: PropTypes.object.isRequired\n};\nexport default Home;","map":{"version":3,"sources":["C:\\dev\\REACT\\leitura\\leitura\\frontend\\src\\Home.js"],"names":["React","Component","Link","PropTypes","LeituraAPI","Button","Post","_","moment","categoriesList","id","title","category","Home","state","categorySelected","sort","onClick","getPostsForCategories","ab","setState","onSortBy","e","target","value","posts","props","postsRender","sortBy","console","log","map","post","author","timestamp","format","commentCount","body","voteScore","filter","a","item","propTypes","array","isRequired","categories","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport * as LeituraAPI from './LeituraAPI'\r\nimport Button from '@material-ui/core/Button';\r\nimport Post from './Post';\r\nimport _ from 'underscore';\r\nimport  moment from 'moment'\r\nimport './App.css';\r\n\r\n\r\nconst categoriesList = [\r\n  {\r\n    id: 0,\r\n    title: 'All Categories',\r\n    category: 'all',\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'React',\r\n    category: 'react',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Redux',\r\n    category: 'redux',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Udacity',\r\n    category: 'udacity',\r\n  },\r\n];\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    categorySelected: 'all',\r\n    sort: '!voteScore',\r\n  }\r\n\r\n  onClick = async (categorySelected) => {\r\n    if (categorySelected !== 'all') {\r\n      const ab = await LeituraAPI.getPostsForCategories(categorySelected)\r\n    }\r\n    this.setState({ categorySelected })\r\n  }\r\n\r\n  onSortBy = (e) => {\r\n    this.setState({\r\n      sort: e.target.value,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { posts } = this.props;\r\n    const { categorySelected, sort } = this.state;\r\n\r\n\r\n    const postsRender = _.sortBy(posts, sort)\r\n    console.log('sort', sort)\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"home\">\r\n          <h1><strong>Leitura</strong></h1>\r\n        </div>\r\n\r\n        <div className=\"grid-posts\">\r\n          <div className=\"grid-posts-item1\">\r\n            {\r\n\r\n              categorySelected === 'all' ?\r\n                postsRender.map(post => (\r\n\r\n                  <Post\r\n                    key={post.id}\r\n                    id={post.id}\r\n                    title={post.title}\r\n                    category={post.category}\r\n                    author={post.author}\r\n                    timestamp={moment(post.timestamp).format('DD/MM/YYYY')}\r\n                    commentCount={post.commentCount}\r\n                    body={post.body}\r\n                    voteScore={post.voteScore}\r\n                  />\r\n                ))\r\n                :\r\n                postsRender.filter(a => a.category === categorySelected).map(post => (\r\n                  <Post\r\n                    key={post.id}\r\n                    id={post.id}\r\n                    title={post.title}\r\n                    category={post.category}\r\n                    author={post.author}\r\n                    timestamp={moment(post.timestamp).format('DD/MM/YYYY')}\r\n                    commentCount={post.commentCount}\r\n                    body={post.body}\r\n                    voteScore={post.voteScore}\r\n                  />\r\n                ))\r\n            }\r\n          </div>\r\n\r\n          <div className=\"grid-posts-item2\">\r\n            <div className=\"meconheca\">\r\n              <Link to=\"/update\"><div className=\"botaoEnviar\">NEW POST</div></Link>\r\n            </div>\r\n\r\n            <div className=\"categories\">\r\n              <h1>SORT BY </h1>\r\n              <select onChange={(e) => this.onSortBy(e)}>\r\n                <option value=\"!voteScore\">More votes</option>\r\n                <option value=\"voteScore\">Less votes</option>\r\n                <option value=\"timestamp\">Date</option>\r\n                <option value=\"!commentCount\">Comments</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"atualizacoes\">\r\n              <h1>CATEGORIES</h1>\r\n              <ul>\r\n                {categoriesList.map(item => (\r\n                  <li key={item.id}>\r\n                    <Button\r\n                      onClick={() => { this.onClick(item.category); }}\r\n                    >\r\n                      {item.title}\r\n                    </Button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHome.propTypes = {\r\n  posts: PropTypes.array.isRequired,\r\n  categories: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}