{"ast":null,"code":"import _classCallCheck from \"C:\\\\dev\\\\REACT\\\\leitura\\\\leitura\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\dev\\\\REACT\\\\leitura\\\\leitura\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\dev\\\\REACT\\\\leitura\\\\leitura\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\dev\\\\REACT\\\\leitura\\\\leitura\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\dev\\\\REACT\\\\leitura\\\\leitura\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\dev\\\\REACT\\\\leitura\\\\leitura\\\\frontend\\\\src\\\\CommentsList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { get } from 'lodash';\nimport moment from 'moment';\nimport './App.css';\n\nvar CommentsList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentsList, _Component);\n\n  function CommentsList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CommentsList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CommentsList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleComments = function () {\n      var post = _this.props.post;\n      var commentsList = get(post, 'comments', []);\n      return commentsList;\n    };\n\n    return _this;\n  }\n\n  _createClass(CommentsList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, this.props.commentCount, \" comments\"), React.createElement(\"div\", {\n        className: \"formulario\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        name: \"falecomigo\",\n        method: \"post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"nome\",\n        name: \"nome\",\n        type: \"text\",\n        placeholder: \"Name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        name: \"mensagem\",\n        id: \"mensagem\",\n        rows: \"5\",\n        placeholder: \"Write your comment\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        name: \"enviar\",\n        value: \"COMMENT\",\n        className: \"botaoEnviar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }))), this.handleComments().map(function (comment) {\n        return React.createElement(\"div\", {\n          className: \"container-comments\",\n          key: comment.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"author\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, comment.author), React.createElement(\"div\", {\n          className: \"date\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"Commented at \", moment(comment.timestamp).format('DD/MM/YYYY')), React.createElement(\"div\", {\n          className: \"comment-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, comment.body), React.createElement(\"div\", {\n          className: \"edit-comment\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"EDIT\"), React.createElement(\"div\", {\n          className: \"remove-comment\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"REMOVE\"), React.createElement(\"div\", {\n          className: \"controls\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"like-comment\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"like-comment-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, comment.voteScore), React.createElement(\"div\", {\n          className: \"deslike-comment\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        })));\n      }));\n    }\n  }]);\n\n  return CommentsList;\n}(Component);\n\nfunction mapStateToProps(_ref) {\n  var post = _ref.post;\n  return {\n    post: post\n  };\n}\n\nexport default connect(mapStateToProps)(CommentsList);","map":{"version":3,"sources":["C:\\dev\\REACT\\leitura\\leitura\\frontend\\src\\CommentsList.js"],"names":["React","Component","connect","get","moment","CommentsList","handleComments","post","props","commentsList","commentCount","map","comment","id","author","timestamp","format","body","voteScore","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { get } from 'lodash'\r\nimport moment from 'moment';\r\n\r\nimport './App.css';\r\n\r\nclass CommentsList extends Component {\r\n\r\n    handleComments = () => {\r\n        const { post } = this.props\r\n        const commentsList = get(post, 'comments', []);\r\n        return commentsList\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"comments\">\r\n                <p>{this.props.commentCount} comments</p>\r\n                <div className=\"formulario\">\r\n                    <form name=\"falecomigo\" method=\"post\">\r\n                        <input id=\"nome\" name=\"nome\" type=\"text\" placeholder=\"Name\" required />\r\n                        <textarea name=\"mensagem\" id=\"mensagem\" rows=\"5\" placeholder=\"Write your comment\" required></textarea>\r\n                        <input type=\"submit\" name=\"enviar\" value=\"COMMENT\" className=\"botaoEnviar\" />\r\n                    </form>\r\n                </div>\r\n                {this.handleComments().map(comment => (\r\n                    <div className=\"container-comments\" key={comment.id}>\r\n                        <div className=\"author\">\r\n                            {comment.author}\r\n                        </div>\r\n                        <div className=\"date\">\r\n                            Commented at {moment(comment.timestamp).format('DD/MM/YYYY')}\r\n                        </div>\r\n                        <div className=\"comment-content\">\r\n                            {comment.body}\r\n                        </div>\r\n\r\n                        <div className=\"edit-comment\">\r\n                            EDIT\r\n                                </div>\r\n                        <div className=\"remove-comment\">\r\n                            REMOVE\r\n                                </div>\r\n                        <div className=\"controls\">\r\n                            <div className=\"like-comment\"></div>\r\n                            <div className=\"like-comment-text\">{comment.voteScore}</div>\r\n                            <div className=\"deslike-comment\"></div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ post }) {\r\n    return {\r\n        post,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CommentsList)\r\n"]},"metadata":{},"sourceType":"module"}