{"ast":null,"code":"import { getAllPosts, getPostDetails, getPostComments, createPost } from '../LeituraAPI';\nimport { receivePosts, receivePostDetails, receivePostComments, newPost } from './posts';\nvar genereteId = localStorage.token;\nif (!genereteId) genereteId = localStorage.token = Math.random().toString(36).substr(-8);\nexport function handleInitialData() {\n  return function (dispatch) {\n    return getAllPosts().then(function (posts) {\n      dispatch(receivePosts(posts));\n    });\n  };\n}\nexport function postDetails(id) {\n  return function (dispatch) {\n    return getPostDetails(id).then(function (post) {\n      dispatch(receivePostDetails(post));\n    });\n  };\n}\nexport function postComments(id) {\n  return function (dispatch) {\n    return getPostComments(id).then(function (comments) {\n      dispatch(receivePostComments(comments));\n    });\n  };\n}\nexport function addPost(post) {\n  console.log(post);\n  var postContent = {\n    id: genereteId,\n    timestamp: post.timestamp,\n    title: post.title,\n    body: post.body,\n    author: post.author,\n    category: post.category\n  };\n  console.log(postContent);\n  return function (dispatch) {\n    return createPost(postContent).then(function (resp) {\n      return dispatch(newPost(resp));\n    }).catch(function (e) {\n      console.warn('Error in createPost: ', e);\n    });\n  };\n}","map":{"version":3,"sources":["C:\\dev\\REACT\\leitura\\leitura\\frontend\\src\\actions\\shared.js"],"names":["getAllPosts","getPostDetails","getPostComments","createPost","receivePosts","receivePostDetails","receivePostComments","newPost","genereteId","localStorage","token","Math","random","toString","substr","handleInitialData","dispatch","then","posts","postDetails","id","post","postComments","comments","addPost","console","log","postContent","timestamp","title","body","author","category","resp","catch","e","warn"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,EAAsCC,eAAtC,EAAuDC,UAAvD,QAAyE,eAAzE;AACA,SAASC,YAAT,EAAuBC,kBAAvB,EAA2CC,mBAA3C,EAAgEC,OAAhE,QAA+E,SAA/E;AAEA,IAAIC,UAAU,GAAGC,YAAY,CAACC,KAA9B;AACA,IAAI,CAACF,UAAL,EACIA,UAAU,GAAGC,YAAY,CAACC,KAAb,GAAqBC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAC,CAAnC,CAAlC;AAEJ,OAAO,SAASC,iBAAT,GAA6B;AAChC,SAAO,UAACC,QAAD,EAAc;AACjB,WAAOhB,WAAW,GACbiB,IADE,CACG,UAACC,KAAD,EAAW;AACbF,MAAAA,QAAQ,CAACZ,YAAY,CAACc,KAAD,CAAb,CAAR;AACH,KAHE,CAAP;AAIH,GALD;AAMH;AAGD,OAAO,SAASC,WAAT,CAAqBC,EAArB,EAAyB;AAC5B,SAAO,UAACJ,QAAD,EAAc;AACjB,WAAOf,cAAc,CAACmB,EAAD,CAAd,CACFH,IADE,CACG,UAAAI,IAAI,EAAI;AACVL,MAAAA,QAAQ,CAACX,kBAAkB,CAACgB,IAAD,CAAnB,CAAR;AACH,KAHE,CAAP;AAIH,GALD;AAMH;AAED,OAAO,SAASC,YAAT,CAAsBF,EAAtB,EAA0B;AAC7B,SAAO,UAACJ,QAAD,EAAc;AACjB,WAAOd,eAAe,CAACkB,EAAD,CAAf,CACFH,IADE,CACG,UAAAM,QAAQ,EAAI;AACdP,MAAAA,QAAQ,CAACV,mBAAmB,CAACiB,QAAD,CAApB,CAAR;AACH,KAHE,CAAP;AAIH,GALD;AAMH;AAED,OAAO,SAASC,OAAT,CAAiBH,IAAjB,EAAuB;AACtBI,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,MAAMM,WAAW,GAAG;AAChBP,IAAAA,EAAE,EAAEZ,UADY;AAEhBoB,IAAAA,SAAS,EAAEP,IAAI,CAACO,SAFA;AAGhBC,IAAAA,KAAK,EAAER,IAAI,CAACQ,KAHI;AAIhBC,IAAAA,IAAI,EAAET,IAAI,CAACS,IAJK;AAKhBC,IAAAA,MAAM,EAAEV,IAAI,CAACU,MALG;AAMhBC,IAAAA,QAAQ,EAAEX,IAAI,CAACW;AANC,GAApB;AASAP,EAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AAEA,SAAO,UAAAX,QAAQ,EAAE;AACb,WAAOb,UAAU,CAACwB,WAAD,CAAV,CACNV,IADM,CACD,UAAAgB,IAAI;AAAA,aAAIjB,QAAQ,CAACT,OAAO,CAAC0B,IAAD,CAAR,CAAZ;AAAA,KADH,EAENC,KAFM,CAEA,UAAAC,CAAC,EAAI;AACRV,MAAAA,OAAO,CAACW,IAAR,CAAa,uBAAb,EAAqCD,CAArC;AACH,KAJM,CAAP;AAKH,GAND;AAOH","sourcesContent":["import { getAllPosts, getPostDetails, getPostComments, createPost } from '../LeituraAPI'\r\nimport { receivePosts, receivePostDetails, receivePostComments, newPost } from './posts'\r\n\r\nlet genereteId = localStorage.token\r\nif (!genereteId)\r\n    genereteId = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nexport function handleInitialData() {\r\n    return (dispatch) => {\r\n        return getAllPosts()\r\n            .then((posts) => {\r\n                dispatch(receivePosts(posts))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function postDetails(id) {\r\n    return (dispatch) => {\r\n        return getPostDetails(id)\r\n            .then(post => {\r\n                dispatch(receivePostDetails(post))\r\n            })\r\n    }\r\n}\r\n\r\nexport function postComments(id) {\r\n    return (dispatch) => {\r\n        return getPostComments(id)\r\n            .then(comments => {\r\n                dispatch(receivePostComments(comments))\r\n            })\r\n    }\r\n}\r\n\r\nexport function addPost(post) {\r\n        console.log(post)\r\n        const postContent = {\r\n            id: genereteId,\r\n            timestamp: post.timestamp,\r\n            title: post.title,\r\n            body: post.body,\r\n            author: post.author,\r\n            category: post.category,\r\n\r\n        }\r\n        console.log(postContent)\r\n\r\n        return dispatch=>{\r\n            return createPost(postContent)\r\n            .then(resp => dispatch(newPost(resp)))\r\n            .catch(e => {\r\n                console.warn('Error in createPost: ',e)\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}